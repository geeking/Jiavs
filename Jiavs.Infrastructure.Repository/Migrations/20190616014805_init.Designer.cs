// <auto-generated />
using System;
using Jiavs.Infrastructure.Repository.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Jiavs.Infrastructure.Repository.Migrations
{
    [DbContext(typeof(JiavsContext))]
    [Migration("20190616014805_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Jiavs.Domain.Models.Article", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<uint?>("AuthorId");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Jiavs.Domain.Models.User", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("Birthday");

                    b.Property<string>("Description");

                    b.Property<string>("Email");

                    b.Property<DateTime?>("LastUpdateTime");

                    b.Property<short>("Level");

                    b.Property<string>("Name");

                    b.Property<string>("NickName");

                    b.Property<string>("QQ");

                    b.Property<DateTime>("RegisterTime");

                    b.Property<string>("School");

                    b.Property<int>("Score");

                    b.Property<string>("WeChat");

                    b.HasKey("Id");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("Jiavs.Domain.Models.Article", b =>
                {
                    b.HasOne("Jiavs.Domain.Models.User", "Author")
                        .WithMany("Articles")
                        .HasForeignKey("AuthorId");

                    b.OwnsOne("Jiavs.Domain.Models.ValueObjects.ArticleContent", "Content", b1 =>
                        {
                            b1.Property<uint>("ArticleId");

                            b1.Property<string>("ContentHtml");

                            b1.Property<string>("ContentMarkdown");

                            b1.Property<string>("CoverUrl");

                            b1.Property<string>("Summary");

                            b1.Property<string>("Title");

                            b1.HasKey("ArticleId");

                            b1.ToTable("Articles");

                            b1.HasOne("Jiavs.Domain.Models.Article")
                                .WithOne("Content")
                                .HasForeignKey("Jiavs.Domain.Models.ValueObjects.ArticleContent", "ArticleId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("Jiavs.Domain.Models.ValueObjects.ArticleSettings", "Settings", b1 =>
                        {
                            b1.Property<uint>("ArticleId");

                            b1.Property<bool>("CanComment");

                            b1.Property<bool>("CanGrade");

                            b1.HasKey("ArticleId");

                            b1.ToTable("Articles");

                            b1.HasOne("Jiavs.Domain.Models.Article")
                                .WithOne("Settings")
                                .HasForeignKey("Jiavs.Domain.Models.ValueObjects.ArticleSettings", "ArticleId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("Jiavs.Domain.Models.ValueObjects.ArticleStatus", "Status", b1 =>
                        {
                            b1.Property<uint>("ArticleId");

                            b1.Property<int>("ClassificationId");

                            b1.Property<DateTime>("CreatedTime");

                            b1.Property<bool>("Deleted");

                            b1.Property<DateTime?>("DeletedTime");

                            b1.Property<bool>("IsOriginal");

                            b1.Property<bool>("IsPublished");

                            b1.Property<DateTime>("ModifyTime");

                            b1.Property<DateTime?>("PublishTime");

                            b1.Property<int>("VisitCount");

                            b1.HasKey("ArticleId");

                            b1.ToTable("Articles");

                            b1.HasOne("Jiavs.Domain.Models.Article")
                                .WithOne("Status")
                                .HasForeignKey("Jiavs.Domain.Models.ValueObjects.ArticleStatus", "ArticleId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
